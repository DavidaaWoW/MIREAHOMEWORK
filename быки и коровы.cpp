/* Игра «Быки и Коровы»
Компьютер «задумывает» четырехзначное число, не содержащее двух одинаковых цифр! Вы набираете свое число, и компьютер сообщает количество плюсов (точно угаданных цифр, т.е., стоящих на своих местах) и минусов (цифр, которые есть в задуманном числе, но на другом месте).
Например, пусть задуманное число 5734, а вы набирали 0755. Результат будет 1 плюс и 2 минуса. Игра продолжается до тех пор, пока вы получите 4 плюса. */
//Игра "быки и коровы"
#include <iostream>
#include <ctime>
#include <cstdlib>
#include <string>

using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian"); //локализируем консоль
    //вводим переменные
    bool checker = false;
    srand(time(0)); //подключаем генератор случайных чисел, работающий на основе консольного времени
    int randc[4];
    int n;
    int m[4];
    char sym[4] = {0,0,0,0};
    for(int i = 0;i<4;i++) 
    {
        randc[i] = rand()%10; //генерируем по отдельности каждую цифру четырёхзначного числа
        for(int k = 0;k<4;k++)
    {
        while(randc[i] == randc[k]) //цикл запускается, если хоть одна цифра в массиве равна другой
        {
            if(i == k) //но если значения элемента массива равно самому себе, мы конечно же из цикла выходим
                break;
            randc[i] = rand()%10; //будет генерировать цифры до тех пор, пока не найдёт не встретившееся
        }
    }
    }
    cout << endl; //пропускаем строку для лучшего отображения
    //сообщаем пользователю условия игры
    cout << "Попробуйте отгадать загаданное компьютером число, компьютер загадывает 4-х значное число (обратите внимание, что в числе цифры не повторяются), если во введённом вами числе цифра та же самая, что и у компьютера и стоит на том же месте, то выводится плюс, если же цифра есть в числе, но стоит не на своём месте, то выводится минус" << endl;
    while(checker == false) //цикл будет выполняться до тех пор, пока мы его не остановим, а останавливаем только тогда, когда пользователь отгадал число
    {
        cin >> n; //в каждой итерации цикла даём пользователю вводить число
        if(n<1000||n>9999) //не даём вводить любое число, кроме четырёхзначного
        {
            cout << "Число должно быть четырёхзначным!" << endl;
            break;
        }
        for (int b = 3;b>=0;b--) //этот цикл переводит введённое пользователем число в целочисленный массив, для более простой обработки
        {
            m[b] = n%10;
            n /= 10;
            if(m[b]==randc[b]) //если оказывается, что пользователь сразу же ввёл какую-нибудь цифру правильно, да ещё и на своём месте, то мы в пустом символьном массиве, заполняем это место плюсиком
                sym[b] = '+';
        }
        for(int c = 0;c<4;c++) //через цикл проверяем - есть ли вообще введённая пользователем цифра в числе загаданном компьютером?
            {
                if(sym[c] == 0) //но конечно же только тогда, когда у нас на месте символа стоит нуль, нам же не надо заменять уже полученные плюсики
                    {
                        if(m[c]==randc[0]||m[c]==randc[1]||m[c]==randc[2]||m[c]==randc[3])
                    sym[c] = '-'; //вводим на том самом месте, где пользователь ввёл цифру, которая есть в загаданном числе минус
                    }
            cout << sym[c]; //выводим получившийся результат пользователю на экран
            if(sym[0]=='+'&&sym[1]=='+'&&sym[2]=='+'&&sym[3]=='+') //как только пользователь получил все "плюсики", это значит, что она отгадал число, соответственно меняем булевую переменную, что сразу же после окончания текущей итерации выведет нас из цикла
                checker = true;
            sym[c] = 0; //после каждой итерации конечно же обнуляем наш символьный массив
            }
            cout << endl;
    }
    if(checker == true) //как только та самая булевая переменная стала правдой, и пользователя выпустили из цикла, поздравляем его с победой
    cout << "Вы отгадали число!" << endl;
    return 0;
}
